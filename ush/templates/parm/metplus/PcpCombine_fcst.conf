# PcpCombine METplus Configuration for Forecasts

# section heading for [config] variables - all items below this line and
# before the next section heading correspond to the [config] section
[config]

# List of applications to run - only PcpCombine for this case
PROCESS_LIST = PcpCombine

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = INIT

# Format of INIT_BEG and INT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT
INIT_BEG = {ENV[CDATE]}

# End time for METplus run - must match INIT_TIME_FMT
INIT_END = {ENV[CDATE]}

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds
INIT_INCREMENT = 3600

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = {ENV[FHR_LIST]}

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = times

# Run pcp_combine on forecast data but not observation (observation input
# files are not provided).
OBS_PCP_COMBINE_RUN = False
FCST_PCP_COMBINE_RUN = True

# Mode of PCPCombine to use (SUM, ADD, SUBTRACT, DERIVE, or CUSTOM).
FCST_PCP_COMBINE_METHOD = ADD

# Specify how to name the array in the NetCDF file that pcp_combine
# generates.
FCST_PCP_COMBINE_OUTPUT_NAME = {ENV[FIELDNAME_IN_MET_OUTPUT]}

# Accumulation interval available in the input forecast data.
#FCST_PCP_COMBINE_INPUT_ACCUMS = 01
FCST_PCP_COMBINE_INPUT_ACCUMS = {ENV[IN_ACCUM]} 
# Accumulation interval to generate in the output file.
FCST_PCP_COMBINE_OUTPUT_ACCUM = {ENV[ACCUM]}

# If the "bucket" output NetCDF file already exists, DON'T skip the call
# to pcp_combine.
#
# In general, we want to recreate the files when the SRW App workflow
# task that uses this METplus configuration file is relaunched.
PCP_COMBINE_SKIP_IF_OUTPUT_EXISTS = False

# Maximum forecast lead to allow when searching for model data to use in
# PCPCombine.
# Default is a very large time (4000 years) so setting this to a valid
# maximum value can speed up execution time of numerous runs.
FCST_PCP_COMBINE_MAX_FORECAST = 2d

# Keep initialization time constant.
FCST_PCP_COMBINE_CONSTANT_INIT = True 

# Specify the name of the metplus.log file
LOG_METPLUS = {LOG_DIR}/metplus.log.pcpcombine_fcst{ENV[LOG_SUFFIX]}
#
# Directory to write output from PCPCombine.
#
# OUTPUT_BASE apparently has to be set to something; it cannot be left
# to its default value.  But it is not explicitly used elsewhere in this
# configuration file.
#
OUTPUT_BASE = {ENV[FCST_OUTPUT_BASE]}
#OUTPUT_SUBDIR = {ENV[OUTPUT_SUBDIR]}
#FCST_PCP_COMBINE_OUTPUT_DIR = {OUTPUT_BASE}/{OUTPUT_SUBDIR}
FCST_PCP_COMBINE_OUTPUT_DIR = {ENV[FCST_OUTPUT_BASE]}
#
# Specify the location and name of the final METplus configuration file.
#
#METPLUS_CONF = {OUTPUT_BASE}/{OUTPUT_SUBDIR}/metplus_final.{ENV[FIELDNAME_IN_MET_FILEDIR_NAMES]}.conf
METPLUS_CONF = {FCST_PCP_COMBINE_OUTPUT_DIR}/metplus_final.{ENV[FIELDNAME_IN_MET_FILEDIR_NAMES]}.conf

FCST_NATIVE_DATA_TYPE = GRIB
FCST_PCP_COMBINE_INPUT_DATATYPE = GRIB

# End of [config] section and start of [dir] section.
[dir]

# Directory containing forecast input to PCPCombine.
FCST_INPUT_BASE = {ENV[FCST_INPUT_BASE]}
FCST_PCP_COMBINE_INPUT_DIR = {FCST_INPUT_BASE}

STAGING_DIR = {ENV[STAGING_DIR]}

# End of [dir] section and start of [filename_templates] section.
[filename_templates]
#
# The template FCST_PCP_COMBINE_INPUT_TEMPLATE is used to search for 
# forecast input files.  It is relative to FCST_PCP_COMBINE_INPUT_DIR.
#
#TIME_LAG = {ENV[TIME_LAG]}
#MNS_TIME_LAG = {ENV[MNS_TIME_LAG]}
#FCST_PCP_COMBINE_INPUT_TEMPLATE = {init?fmt=%Y%m%d%H?shift={TIME_LAG}}{ENV[SLASH_ENSMEM_SUBDIR_OR_NULL]}/postprd/{ENV[NET]}.t{init?fmt=%H?shift={TIME_LAG}}z.bgdawpf{lead?fmt=%HHH?shift={MNS_TIME_LAG}}.tm00.grib2
#FCST_PCP_COMBINE_INPUT_TEMPLATE = {init?fmt=%Y%m%d%H?shift=-{TIME_LAG}}{ENV[SLASH_ENSMEM_SUBDIR_OR_NULL]}/postprd/{ENV[FCST_FN_TEMPLATE_EXPAND]}
FCST_PCP_COMBINE_INPUT_TEMPLATE = {ENV[FCST_REL_PATH_TEMPLATE]}
#
# The template FCST_PCP_COMBINE_OUTPUT_TEMPLATE specifies the relative
# path to the output files.  It is relative to FCST_PCP_COMBINE_OUTPUT_DIR.
#
#FCST_PCP_COMBINE_OUTPUT_TEMPLATE = {ENV[NET]}.t{init?fmt=%H}z.bgdawpf{lead?fmt=%HHH}.tm00_a{level?fmt=%HH}h.nc
#FCST_PCP_COMBINE_OUTPUT_TEMPLATE = {ENV[FCST_FN_METPROC_TEMPLATE_EXPAND]}
FCST_PCP_COMBINE_OUTPUT_TEMPLATE = {ENV[FCST_REL_PATH_METPROC_TEMPLATE]}
